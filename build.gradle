/*
 * Copyright 2016 281165273@qq.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
description = 'A java client SDK for hyperledger fabric project'

apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'nebula.project'
apply plugin: 'nebula.nebula-bintray'
apply plugin: 'nebula.nebula-release'
apply plugin: 'com.github.hierynomus.license'
apply plugin: 'com.google.protobuf'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.0'
        classpath 'com.netflix.nebula:nebula-project-plugin:3.1.0'
        classpath 'com.netflix.nebula:nebula-release-plugin:4.0.1'
        classpath 'com.netflix.nebula:nebula-bintray-plugin:3.3.4'
        classpath "nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0"
    }
}

group 'me.grapebaba'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

dependencies {
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'
    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'io.grpc:grpc-netty:1.0.0'
    compile 'io.grpc:grpc-protobuf:1.0.0'
    compile 'io.grpc:grpc-stub:1.0.0'
    testCompile 'com.squareup.retrofit2:retrofit-mock:2.0.2'
    testCompile 'junit:junit:4.12'
}

license {
    header project.file('HEADER')
}

bintray {
    pkg {
        repo = 'maven'
        userOrg = 'grapebaba'
        websiteUrl = 'https://github.com/GrapeBaBa/fabric-java'
        issueTrackerUrl = 'https://github.com/GrapeBaBa/fabric-java/issues'
        vcsUrl = 'https://github.com/GrapeBaBa/fabric-java.git'
        labels = ['hyperledger', 'fabric', 'java']

        version {
            name = project.version
            vcsTag = project.version
        }
    }
}

publishing {
    publications {
        nebula(MavenPublication) {
            pom.withXml { xml ->
                configurations.compile.resolvedConfiguration.firstLevelModuleDependencies.each { dep ->
                    asNode().dependencies[0].dependency.find {
                        it.artifactId[0].text() == dep.moduleName &&
                                it.groupId[0].text() == dep.moduleGroup
                    }?.scope[0]?.value = 'compile'
                }

                def licensesNode = xml.asNode()?.licenses
                if (!licensesNode) {
                    licensesNode = xml.asNode().appendNode('licenses')
                }

                def apache = licensesNode.appendNode('license')
                apache.appendNode('name', 'The Apache Software License, Version 2.0')
                apache.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
                apache.appendNode('distribution', 'repo')
            }
        }
    }
}

gradle.taskGraph.whenReady { graph ->
    if (graph.hasTask(":snapshot") || graph.hasTask(":devSnapshot")) {
        bintrayUpload.enabled = false
        artifactoryPublish.enabled = true
    }

    if (graph.hasTask(":final") || graph.hasTask(":candidate")) {
        bintrayUpload.enabled = true
        artifactoryPublish.enabled = false
    }
}

contacts {
    '281165273@qq.com' {
        moniker 'Kai Chen'
        github 'Grapebaba'
        roles 'owner', 'notify'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

idea {
    module {
        // Not using generatedSourceDirs because of
        // https://discuss.gradle.org/t/support-for-intellij-2016/15294/8
        sourceDirs += file("${projectDir}/build/generated/source/proto/main/java");
        sourceDirs += file("${projectDir}/build/generated/source/proto/main/grpc");
    }
}

protobuf {
    protoc {
        // The version of protoc must match protobuf-java. If you don't depend on
        // protobuf-java directly, you will be transitively depending on the
        // protobuf-java version that grpc depends on.
        artifact = "com.google.protobuf:protoc:3.0.0"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.0.0'
        }
    }

    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

repositories {
    jcenter()
}